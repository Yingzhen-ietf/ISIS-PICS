module ietf-isis-pics-8667 {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-isis-pics-8667";
  prefix isis-pics-8667;

  import ietf-isis-pics {
    prefix "isis-pics";
  }

  organization
    "IETF LSR - Link State Routing Working Group";
  contact
    "WG Web:   <http://datatracker.ietf.org/wg/lsr>
     WG List:  <mailto:lsr@ietf.org>

     Author:    Yingzhen Qu
               <mailto:yingzhen.ietf@gmail.com>
     Author:   Les Ginsberg
               <mailto:ginsberg@cisco.com>
     Author:   Tony Przygienda
               <mailto:prz@juniper.net>";

  description
    "ISIS Protocol Implementation Conformance Statement (PICS) is
     defined in ISO 10589. The YANG module is used to query an IS-IS
     implementation of RFC 8667 for the conformance of the protocol
     implementation.

     This YANG model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     Copyright (c) 2023 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
     for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";
  reference
    "RFC XXXX: YANG Data Model for IS-IS PICS";

  revision 2023-10-01 {
    description
      "Initial Version";
    reference
      "RFC XXXX: YANG Data Model for IS-IS PICS.";
  }

  container isis-pics-8667 {
    when "/isis-pics:isis-pics/isis-pics:supported-isis-pics "
       + "= 'rfc-8667'" {
      description
        "This container only exists when rfc-8667 is present in
         the ietf-isis-pics module.";
    }
    description
      "IS-IS Protocol Implementation Conformance Statement (PICS)
       for RFC 8667: IS-IS Extensions for Segment Routing.";


    container sr-capability-support {
      leaf mpls-ipv4 {
        type boolean;
        default false;
        description
          "support mpls-ipv4 capability.";
      }
      leaf mpls-ipv6 {
        type boolean;
        default false;
        description
          "support mpls-ipv6 capability.";
      }
    }
    container prefix-sid-sub-tlv-support {
      presence "Support of prefix sid sub-tlv.";
      leaf r-bit-support {
        type boolean;
        default false;
        description
          "Support of Re-advertisement Flag.";
      }
      leaf n-bit-support {
        type boolean;
        default false;
        description
          "Support of Node-SID Flag.";
      }
      leaf p-bit {
        type boolean;
        default false;
        description
          "Support of No-PHP Flag.";
      }
      leaf e-bit {
        type boolean;
        default false;
        description
          "Support of Explicit NUll Flag.";
      }
      leaf v-bit {
        type boolean;
        default false;
        description
          "Support of Value Flag.";
      }
      leaf l-bit {
        type boolean;
        default false;
        description
          "Support of Local Flag.";
      }
      leaf-list supported-algorithms {
        type uint8;
        description
          "The Segment Routing algorithms that this implementation
           supports.";
      }
    }
    container adj-sid-sub-tlv-support {
      presence "Support of adjacency sid sub-tlv.";
      leaf f-bit {
        type boolean;
        default false;
      }
      leaf b-bit {
        type boolean;
        default false;
      }
      leaf vi-bit {
        type boolean;
        default false;
      }
      leaf lo-bit {
        type boolean;
        default false;
      }
      leaf s-bit {
        type boolean;
        default false;
      }
      leaf pe-bit {
        type boolean;
        default false;
      }
      leaf weight-support {
        type boolean;
        default false;
        description
          "Support of the weight of the Adj-SID for the purpose
           of load balancing.";
      }
    }
    container lan-adj-sid-sub-tlv-support {
      presence "Support of LAN adjacency sid sub-tlv.";
      leaf f-bit {
        type boolean;
        default false;
      }
      leaf b-bit {
        type boolean;
        default false;
      }
      leaf vi-bit {
        type boolean;
        default false;
      }
      leaf lo-bit {
        type boolean;
        default false;
      }
      leaf s-bit {
        type boolean;
        default false;
      }
      leaf pe-bit {
        type boolean;
        default false;
      }
      leaf weight-support {
        type boolean;
        default false;
        description
          "Support of the weight of the Adj-SID for the purpose
           of load balancing.";
      }
    }
    container sid-label-tlv-support {
      presence "Support of the SID/Label sub-tlv.";
    }
    container sid-lable-binding-tlv-support {
      presence "Support of the SID/Label Binding tlv.";
      leaf f-bit {
        type boolean;
        default false;
      }
      leaf m-bit {
        type boolean;
        default false;
      }
      leaf s-bit {
        type boolean;
        default false;
      }
      leaf d-bit {
        type boolean;
        default false;
      }
      leaf a-bit {
        type boolean;
        default false;
      }
    }
    container mt-sid-label-binding-tlv-support {
      presence "Support of the Multi-Topology SID/Label Binding tlv.";
      leaf f-bit {
        type boolean;
        default false;
      }
      leaf m-bit {
        type boolean;
        default false;
      }
      leaf s-bit {
        type boolean;
        default false;
      }
      leaf d-bit {
        type boolean;
        default false;
      }
      leaf a-bit {
        type boolean;
        default false;
      }
    }

    container sr-lb-tlv-support {
      presence "Support of the SR Local Block sub-tlv.";
    }

    container srms-preference-tlv-support {
      presence "Support of the SRMS Preference sub-tlv.";
    }
  }  
}